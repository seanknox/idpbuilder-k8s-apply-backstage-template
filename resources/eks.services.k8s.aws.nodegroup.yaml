properties:
  apiVersion:
    default: eks.services.k8s.aws/v1alpha1
    description: APIVersion for the resource
    type: string
  config:
    description: "NodegroupSpec defines the desired state of Nodegroup. \n An object representing an Amazon EKS managed node group."
    properties:
      amiType:
        description: The AMI type for your node group. If you specify launchTemplate, and your launch template uses a custom AMI, then don't specify amiType, or the node group deployment will fail. If your launch template uses a Windows custom AMI, then add eks:kube-proxy-windows to your Windows nodes rolearn in the aws-auth ConfigMap. For more information about using launch templates with Amazon EKS, see Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide.
        type: string
      capacityType:
        description: The capacity type for your node group.
        type: string
      clientRequestToken:
        description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
        type: string
      clusterName:
        description: The name of the cluster to create the node group in.
        type: string
      clusterRef:
        description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api"
        properties:
          from:
            description: AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)
            properties:
              name:
                type: string
            type: object
        type: object
      diskSize:
        description: The root device disk size (in GiB) for your node group instances. The default disk size is 20 GiB for Linux and Bottlerocket. The default disk size is 50 GiB for Windows. If you specify launchTemplate, then don't specify diskSize, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide.
        format: int64
        type: integer
      instanceTypes:
        description: Specify the instance types for a node group. If you specify a GPU instance type, make sure to also specify an applicable GPU AMI type with the amiType parameter. If you specify launchTemplate, then you can specify zero or one instance type in your launch template or you can specify 0-20 instance types for instanceTypes. If however, you specify an instance type in your launch template and specify any instanceTypes, the node group deployment will fail. If you don't specify an instance type in a launch template or for instanceTypes, then t3.medium is used, by default. If you specify Spot for capacityType, then we recommend specifying multiple values for instanceTypes. For more information, see Managed node group capacity types (https://docs.aws.amazon.com/eks/latest/userguide/managed-node-groups.html#managed-node-group-capacity-types) and Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide.
        items:
          type: string
        type: array
      labels:
        additionalProperties:
          type: string
        description: The Kubernetes labels to be applied to the nodes in the node group when they are created.
        type: object
      launchTemplate:
        description: An object representing a node group's launch template specification. If specified, then do not specify instanceTypes, diskSize, or remoteAccess and make sure that the launch template meets the requirements in launchTemplateSpecification.
        properties:
          id:
            type: string
          name:
            type: string
          version:
            type: string
        type: object
      name:
        description: The unique name to give your node group.
        type: string
      nodeRole:
        description: The Amazon Resource Name (ARN) of the IAM role to associate with your node group. The Amazon EKS worker node kubelet daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies. Before you can launch nodes and register them into a cluster, you must create an IAM role for those nodes to use when they are launched. For more information, see Amazon EKS node IAM role (https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) in the Amazon EKS User Guide . If you specify launchTemplate, then don't specify IamInstanceProfile (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IamInstanceProfile.html) in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide.
        type: string
      nodeRoleRef:
        description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api"
        properties:
          from:
            description: AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)
            properties:
              name:
                type: string
            type: object
        type: object
      releaseVersion:
        description: "The AMI version of the Amazon EKS optimized AMI to use with your node group. By default, the latest available AMI version for the node group's current Kubernetes version is used. For information about Linux versions, see Amazon EKS optimized Amazon Linux AMI versions (https://docs.aws.amazon.com/eks/latest/userguide/eks-linux-ami-versions.html) in the Amazon EKS User Guide. Amazon EKS managed node groups support the November 2022 and later releases of the Windows AMIs. For information about Windows versions, see Amazon EKS optimized Windows AMI versions (https://docs.aws.amazon.com/eks/latest/userguide/eks-ami-versions-windows.html) in the Amazon EKS User Guide. \n If you specify launchTemplate, and your launch template uses a custom AMI, then don't specify releaseVersion, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide."
        type: string
      remoteAccess:
        description: The remote access configuration to use with your node group. For Linux, the protocol is SSH. For Windows, the protocol is RDP. If you specify launchTemplate, then don't specify remoteAccess, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide.
        properties:
          ec2SshKey:
            type: string
          sourceSecurityGroupRefs:
            description: Reference field for SourceSecurityGroups
            items:
              description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api"
              properties:
                from:
                  description: AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)
                  properties:
                    name:
                      type: string
                  type: object
              type: object
            type: array
          sourceSecurityGroups:
            items:
              type: string
            type: array
        type: object
      scalingConfig:
        description: The scaling configuration details for the Auto Scaling group that is created for your node group.
        properties:
          desiredSize:
            format: int64
            type: integer
          maxSize:
            format: int64
            type: integer
          minSize:
            format: int64
            type: integer
        type: object
      subnetRefs:
        items:
          description: "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference type to provide more user friendly syntax for references using 'from' field Ex: APIIDRef: \n from: name: my-api"
          properties:
            from:
              description: AWSResourceReference provides all the values necessary to reference another k8s resource for finding the identifier(Id/ARN/Name)
              properties:
                name:
                  type: string
              type: object
          type: object
        type: array
      subnets:
        description: The subnets to use for the Auto Scaling group that is created for your node group. If you specify launchTemplate, then don't specify SubnetId (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html) in your launch template, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide.
        items:
          type: string
        type: array
      tags:
        additionalProperties:
          type: string
        description: The metadata to apply to the node group to assist with categorization and organization. Each tag consists of a key and an optional value. You define both. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.
        type: object
      taints:
        description: The Kubernetes taints to be applied to the nodes in the node group. For more information, see Node taints on managed node groups (https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html).
        items:
          description: A property that allows a node to repel a set of pods. For more information, see Node taints on managed node groups (https://docs.aws.amazon.com/eks/latest/userguide/node-taints-managed-node-groups.html).
          properties:
            effect:
              type: string
            key:
              type: string
            value:
              type: string
          type: object
        type: array
      updateConfig:
        description: The node group update configuration.
        properties:
          maxUnavailable:
            format: int64
            type: integer
          maxUnavailablePercentage:
            format: int64
            type: integer
        type: object
      version:
        description: The Kubernetes version to use for your managed nodes. By default, the Kubernetes version of the cluster is used, and this is the only accepted specified value. If you specify launchTemplate, and your launch template uses a custom AMI, then don't specify version, or the node group deployment will fail. For more information about using launch templates with Amazon EKS, see Launch template support (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html) in the Amazon EKS User Guide.
        type: string
    required:
      - name
    title: eks.services.k8s.aws.Nodegroup configuration options
    type: object
  kind:
    default: Nodegroup
    description: Kind for the resource
    type: string
  namespace:
    description: Namespace for the resource
    namespace: default
    type: string
  resources:
    enum:
      - eks.services.k8s.aws.nodegroup
